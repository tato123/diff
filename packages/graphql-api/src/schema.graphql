type Event {
  type: String!
  comment: String
  url: String!
  id: String
  selector: String
}

type Invite {
  email: String
  firstName: String
  invitedBy: String
  lastName: String
  status: String
  workspaceId: String
  id: String
}

type User {
  aud: String
  email: String
  email_verified: Boolean
  exp: Int
  family_name: String
  gender: String
  given_name: String
  iat: Int
  iss: String
  locale: String
  name: String
  nickname: String
  picture: String
  plan: String
  sub: String
  updated_at: String
}

type Component {
  created: String
  metageneration: String
  name: String
  updated: String
  url: String
}

type Query {
  allEvents: [Event]
  allInvites: [Invite]
  allUsers: [User]
  allComponents: [Component]
}

type DocChange {
  type: String
  data: Event
}

 type Counter {
    count: Int!
    countStr: String
  }

type Subscription {
  events: Counter!
}

type UploadResult {
  status: String!
}

scalar Upload

input UploadDesignMeta {
  name: String!
}

type Mutation {
  uploadDesign(file: Upload!, metaData: UploadDesignMeta): UploadResult
}
