# use the latest version
version: 2.1

# Set a standard set of default
# because we are using a monorepo
defaults: &defaults
  working_directory: ~/app
  docker:
    - image: circleci/node:10.5.0

stageFilter: &stageFilter
  context: Stage
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^stage.*/

prodFilter: &prodFilter
  context: Prod
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v.*/

# Configure the orbs we want to use which
# have some basic set of functionality in order
# to kick off our jobs
orbs:
  aws-s3: circleci/aws-s3@1.0.3
  awsebcli: sbc-orbs/awsebcli@0.0.3

jobs:
  # configure the lerna portion
  lerna:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install NPX
          command: yarn global add npx
      - run:
          name: Install dependencies with yarn workspaces
          command: npx lerna bootstrap
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}-{{ checksum "lerna.json"}}-{{ .Revision }}
          paths:
            - node_modules
            - packages/adobexd-plugin/node_modules
            - packages/client/node_modules
            - packages/client-bridge/node_modules
            - packages/functions-lambda@edge/node_modules
            - packages/graphql-api/node_modules
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}-{{ checksum "lerna.json"}}-{{ .Revision }}
      - run:
          name: Build Packages in parallel
          command: |
            yarn build:$env
      - persist_to_workspace:
          root: packages
          paths:
            - adobexd-plugin/dist
            - client/build
            - client-bridge/dist
  deploy-client:
    working_directory: ~/app
    docker:
      - image: "circleci/python:2.7"
    steps:
      - checkout
      - attach_workspace:
          at: packages
      - aws-s3/sync:
          from: packages/client/build/
          to: $S3_CLIENT_BUCKET
          arguments: |
            --acl public-read \
            --cache-control "max-age=300" \
            --delete
  deploy-client-bridge:
    working_directory: ~/app
    docker:
      - image: "circleci/python:2.7"
    steps:
      - checkout
      - attach_workspace:
          at: packages
      - aws-s3/sync:
          from: packages/client-bridge/dist/
          to: $S3_CLIENT_BRIDGE_BUCKET
          arguments: |
            --acl public-read \
            --cache-control "max-age=300" \
            --delete
  deploy-graphql-api:
    working_directory: ~/app
    docker:
      - image: "circleci/python:3.7.2"
    steps:
      - checkout
      - attach_workspace:
          at: packages
      - awsebcli/install
      - awsebcli/configure:
          profile-name: $env
          aws-region: $AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - deploy:
          name: Deploy to elastic beanstalk 
          command: |
            cd packages/graphql-api
            eb deploy --profile $env

# Our process / workflow
workflows:
  version: 2
  
  deploy_stage:
    jobs: 
      - lerna:  
          <<: *stageFilter
      - build:
          <<: *stageFilter
          requires:
            - lerna
      - deploy-client:
          <<: *stageFilter
          requires:
            - build
      - deploy-client-bridge:
          <<: *stageFilter
          requires:
            - build
      - deploy-graphql-api:
          <<: *stageFilter
          requires:
            - build
  deploy_prod:
    jobs: 
      - lerna:  
          <<: *prodFilter
      - build:
          <<: *prodFilter
          requires:
            - lerna
      - deploy-client:
          <<: *prodFilter
          requires:
            - build
      - deploy-client-bridge:
          <<: *prodFilter
          requires:
            - build
          